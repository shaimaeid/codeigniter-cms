<?phpclass template_part extends CI_Controller{	public function __construct(){		parent::__construct();		$this->load->helper('url');		$this->load->database();		$this->load->model('template_part_model');		$config['upload_path'] = '../images/template/';		$config['allowed_types'] = 'gif|jpg|png';		$config['max_size']	= '2048';		$config['max_width']  = '1024';		$config['max_height']  = '768';		$this->load->library('upload', $config);		session_start();			}	    public function index(){ 		if ($this->input->POST('action')=='insert' && $this->input->POST('template_part_id')>0)			$action = 'update';		else			$action=$this->input->POST('action');				switch ($action)		{			case "get":				$this->get_templates();				break;						case "insert":				$this->insert_template();				break;					case "update":				$this->update_template();				break;							case "delete":				$this->delete_template();				break;							case "load_form":				$this->load_form();				break;						default:				$data['title']='Template Parts';				$this->load->view('templates/header',$data);				$this->load->view('template_part/template_menu',$data);				$this->load->view('template_part/template_part',$data);				$this->load->view('templates/footer');		}	}	public function get_templates(){		$start = $this->input->post('start');		$limit = $this->input->post('limit');		$filters=null;		if($this->input->post('id')){			$filters['`template_part`.`template_part_id`']=$this->input->post('id');		}		if($this->input->post('title')){			$filters['`template_part`.`title`']=$this->input->post('title');		}				$data['template_part'] = $this->template_part_model->get_templates($start, $limit, $filters);		$total = $this->template_part_model->count_templates($filters);		echo '{"results":'.json_encode($data['template_part']).',"total":'.json_encode($total).'}'; 	}	public function insert_template(){		$title = $this->input->post('title');		$content = $this->input->post('content');				$update_timeFormate = date('Y-m-d', strtotime($this->input->post('update_time')));		$update_time = $update_timeFormate." 00:00:00";				$template_part_id = $this->template_part_model->insert_template($title,$content,$update_time);				$image ="";		$msg = "";				if($this->upload->do_upload('image')){			$file0=$this->upload->data();			$image = $file0['file_name'];			$msg="Done ";		}		else 			$msg = $this->upload->display_errors('<p>', '</p>');					$this->template_part_model->update_files($template_part_id,$image);					echo '{"success":true,"msg":"'.$msg.'"}';	}	public function update_template(){		$template_part_id = $this->input->post('template_part_id');				$title = $this->input->post('title');		$content = $this->input->post('content');				$update_timeFormate = date('Y-m-d', strtotime($this->input->post('update_time')));		$update_time = $update_timeFormate." 00:00:00";					$this->template_part_model->update_template($template_part_id,$title,$content,$update_time);						$image ="";		$msg = "";				if($this->upload->do_upload('image')){			$file0=$this->upload->data();			$image = $file0['file_name'];			$msg="Done ";		}		else 			$msg = $this->upload->display_errors('<p>', '</p>');					$this->template_part_model->update_files($template_part_id,$image);					echo '{"success":true,"msg":"'.$msg.'"}';	}	public function delete_template(){		$id = $this->input->post('id');		$IDs = explode(",", $id);		foreach ($IDs as &$id)		{			$this->template_part_model->delete_template($id);		}		echo '{"success":true,"msg":"done"}';	}		public function load_form(){		$template_part_id=$this->input->post('template_part_id');		if ($template_part_id > 0){			$rows = $this->template_part_model->get_template_id($template_part_id);			$row=$rows[0];			$update_time="";            if(strlen($row->update_time>0))            $update_time=date("Y-m-d",strtotime($row->update_time));			$data = array(					'title' => $row->title,					'content' => $row->content,					'update_time' => $update_time,					'image' => $row->image				);			echo '{"success":true,"data":'.json_encode($data).'}';		}	}	}?>