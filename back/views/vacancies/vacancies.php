<h1><?php echo $title ; ?></h1><script>	Ext.onReady(function(){  	//vars	Ext.QuickTips.init(); 	var itemsPerPage = 20;	// Action toolbar	// ---- actions tool bar definition ---- //	 var tbar1=new Ext.Toolbar({ items: [			{ text: 'Add record',			   iconCls:'icos-add',				tooltip:'Add new record',				handler: function() {					showform(0);      				}			},			{ text: 'Edit record',				iconCls:'icos-create',				tooltip:'Edit selected record',				handler: function() {				 var keys = grid.getSelectionModel().getSelection() ;					if (keys.length == 1) { 						id=null;						Ext.each(grid.getSelectionModel().getSelection(), function(record){							id=record.get('vacancy_id');						});						showform(id); 					}					else 						Ext.Msg.alert('Info','One record should be selected!');				}			},			{				text: 'Change Status',				iconCls:'icos-link',				tooltip:'Change the record status',				handler: function() {					var keys = grid.getSelectionModel().getSelection( ) ;					if (keys.length == 1)					{ 						id='';						open='';						Ext.each(grid.getSelectionModel().getSelection(), function(record){							id+=','+record.get('vacancy_id');							open+=','+record.get('open');						});						Ext.MessageBox.confirm('Confirm','Are you sure you wanna change this record status!',function (btn){								if(btn=='yes'){ 									open_record(id.substring(1),open.substring(1));								}							},							this);					}					else 					{						Ext.MessageBox.alert('Info','One record should be selected!');					}				}			},			{ text: 'Delete',				iconCls:'icos-cross',				tooltip:'Delete selected recoreds',				handler: function() {					var keys = grid.getSelectionModel().getSelection( ) ;					if (keys.length > 0)					{ 						id='';						Ext.each(grid.getSelectionModel().getSelection(), function(record){							id+=','+record.get('vacancy_id');						});						Ext.MessageBox.confirm('Confirm','Are you sure you wanna detele this record!',function (btn){								if(btn=='yes'){ 									del_record(id.substring(1));								}							},							this);					}				}			},			{ text: 'Print',				iconCls:'icos-printer',				tooltip:'Print topics',				handler: function() {					Ext.ux.grid.Printer.sitepath = '<?php echo ROOT_DIR ; ?>';					Ext.ux.grid.Printer.mainTitle='Tarbeet Web Site: <?php echo $title; ?>';					Ext.ux.grid.Printer.title = 'Tarbeet Web Site: <?php echo $title; ?>';					Ext.ux.grid.Printer.stylesheetPath = '<?php echo ROOT_DIR;?>css/Print.css';					Ext.ux.grid.Printer.printAutomatically = false;					Ext.ux.grid.Printer.print(grid);       				}			}		  ]});		  // Search Items 		var id_srch=new Ext.form.TextField({		name: 'vacancy_id',		width: 70,		emptyText:'Vacancy ID',		hideLabel: true		});		var name_en_srch=new Ext.form.TextField({		name: 'title_en',		width: 100,		emptyText:'English Name',		hideLabel: true		});			var name_ar_srch=new Ext.form.TextField({		name: 'title_ar',		width: 100,		emptyText:'Arabic Name',		hideLabel: true		});			// ---- main store for the grid ---- //		var store = new Ext.data.JsonStore({			// store configs			storeId: 'myStore',			autoLoad: false,			topicsize: itemsPerPage,			proxy: {				type: 'ajax',				url: 'vacancies',				extraParams: {				action: 'get'			},			actionMethods: 'POST',				reader: {					type: 'json',					root: 'results',					idProperty: 'vacancy_id',					totalProperty: 'total'				}			},			listeners: {						'beforeload': function(store, options) {							store.proxy.extraParams = { action: 'get',												id:id_srch.getValue(),												title_en:name_en_srch.getValue(),												title_ar:name_ar_srch.getValue(),												is_open : '<?php echo $is_open; ?>'														};						}					},			fields: ['vacancy_id' ,'title_en', 'title_ar', 'description_en', 'description_ar', 'open', '_order' ]		});				function StatusVal(val) {			if (val > 0) {				return '<span style="color:green;">✓</span>';			} else if (val <= 0) {				return '<span style="color:red;">✕</span>';			}			return val;		}				// grid		var wdth=Ext.getDom('grid_details').clientWidth-30;		var grid = new Ext.grid.Panel({			height: 580,			width:wdth,			renderTo: 'grid_details',			store: store,			id: 'grid',			selType: 'checkboxmodel',			selModel: {				mode: 'MULTI',   // or SINGLE, SIMPLE ... review API for Ext.selection.CheckboxModel				checkOnly: true    // or false to allow checkbox selection on click anywhere in row			},				features: [],			anchor: '90%',				columns: [				{ 					text : 'Vacancy ID',					width : 70,					sortable : true,					dataIndex: 'vacancy_id'				},				{ 					text : 'English Name',					width : 150,					sortable : true,					dataIndex: 'title_en'				},				{ 					text : 'Arabic Name',					width : 200,					sortable : true,					dataIndex: 'title_ar'					},				{ 					text : 'English Description',					width : 210,					sortable : true,					dataIndex: 'description_en'					},				{ 					text : 'Arabic Description',					width : 210,					sortable : true,					dataIndex: 'description_ar'					},				{ 					text : 'Status',					width : 70,					sortable : true,					dataIndex: 'open',					renderer : StatusVal				},				{ 					text : 'Order',					width : 70,					sortable : true,					dataIndex: '_order'					}							],			dockedItems: [{					xtype: 'pagingtoolbar',					store: store,   // same store GridPanel is using					dock: 'bottom',					displayInfo: true				},				tbar1,				{					xtype: 'toolbar',					dock: 'top',					items:						[							{								xtype: 'label',								forId: 'myFieldId',								text: 'Filters:',								margins: '0'							},							id_srch,							name_en_srch,							name_ar_srch,							{ 								text: 'Search',								iconCls:'icos-search',								handler: function() {									grid.child('pagingtoolbar').moveFirst();									store.reload({										params:{											start:0,											limit: itemsPerPage,											id:id_srch.getValue(),											title_en:name_en_srch.getValue(),											title_ar:name_ar_srch.getValue()										}									});												}								},							{								text: 'Clear filters',								iconCls:'icos-trash',								handler: function() {								grid.child('pagingtoolbar').moveFirst();								id_srch.setValue(null);								name_en_srch.setValue(null);								name_ar_srch.setValue(null);								store.load({									params:{										start:0,										limit: itemsPerPage									}								});  													  }							}						]				}			],			viewConfig: {				forceFit: true			}		});		store.load({			params:{				start:0,				limit: itemsPerPage			}		});		// --------------------- Functions 		//add new record window code		function showform(vacancy_id){			var val=0;			var myForm = new Ext.FormPanel({				url: 'vacancies',				baseParams: {					action: 'insert',					vacancy_id:vacancy_id				},				frame: true,				bodyStyle: '',				width: 320,				layout: 'form',				method: 'POST',				items: [						{							xtype: 'textfield',							fieldLabel: 'English Name ',							width:'190',							name: 'title_en',							allowBlank: false						},						{							xtype: 'textfield',							fieldLabel: 'Arabic Name ',							width:'190',							name: 'title_ar',							allowBlank: false						},						{							xtype: 'htmleditor',							enableColors: true,							enableAlignments: true,							name: 'description_en',							fieldLabel: 'English Description',							height:250,							labelStyle:'margin-bottom:230px;',							minLength: 6						},						{							xtype: 'htmleditor',							enableColors: true,							enableAlignments: true,							name: 'description_ar',							fieldLabel: 'Arabic Description',							height:250,							labelStyle:'margin-bottom:230px;',							minLength: 6						},						{							xtype: 'numberfield',							fieldLabel: 'Order ',							width:'190',							name: '_order'						}										]			});			myForm.getForm().load({				url: 'vacancies',				params: {					action: 'load_form'				},				success: function(form, action) {},				failure: function(form, action) {					Ext.Msg.alert("Load failed", action.result.errorMessage);				}			});			var win = new Ext.Window({				title: 'Add/Edit new record',				id: 'formanchor-win', 				width: 800, 				height: 700, 				plain: true, 				layout: 'fit', 				border: false, 				closable: false, 				items:myForm,				buttons: [{							text: 'Add/Edit',							handler: function(){								if(myForm.getForm().isValid()){									myForm.getForm().submit									({										success: function(form, action) {											var text =  action.result.msg;											Ext.Msg.alert('Done',text);											store.reload();											win.close();										}, 										failure: function(form, action) {										 var text =  action.result.err										 Ext.Msg.alert('Error',text);																	}									});								}								else {									Ext.Msg.alert('Error','Please, Insert all the obligatory fields.');									//myForm.getForm().show();								}															}						},						{							text: 'Reset',							handler: function(){								myForm.getForm().reset();							}						},						{							text: 'Close',							handler: function(){								win.close();							}						}					]			});			win.show();		};						function open_record(id,open){			Ext.Ajax.request({				url: 'vacancies',				params: {					action: 'open_vacancy',					id:id,					open:open				},				success: function(response){					var text = Ext.decode(response.responseText).msg;					Ext.Msg.alert('Vacancy Status',text);					store.reload();				}			});		};		// delete selected record		function del_record(id){			Ext.Ajax.request({				url: 'vacancies',				params: {					action: 'delete',					id:id				},				success: function(response){					var text = Ext.decode(response.responseText).msg;					Ext.Msg.alert('Delete',text);					store.reload();				}			});		};	});</script><div id="grid_details"></div>